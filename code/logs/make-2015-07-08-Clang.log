--------------------------------------------------------------------------------
Compiling pargen.o ...
c++  -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11 -o pargen.o -c pargen.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name pargen.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/pargen.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o pargen.o -x c++ pargen.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking pargen.exe ...
c++ -o pargen.exe -lstdc++ pargen.o -lstdc++
================================================================================
Done building pargen.exe
================================================================================


/Applications/Xcode.app/Contents/Developer/usr/bin/make -C test/unit CXX=c++ BOOST=
c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o algebraic.o algebraic.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name algebraic.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/algebraic.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o algebraic.o -x c++ algebraic.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from algebraic.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from algebraic.cpp:49:
In file included from ../../patterns/n+k.hpp:332:
../../patterns/solvers.hpp:123:31: warning: comparison of integers of different signs: 'const int' and 'const unsigned long' [-Wsign-compare]
        return e.m_e2.m_value < r && solve(e.m_e1,r-e.m_e2.m_value);
               ~~~~~~~~~~~~~~ ^ ~
../../patterns/n+k.hpp:149:48: note: in instantiation of function template specialization 'mch::solve<mch::ref2<mch::var<unsigned long> >, int, unsigned long>' requested here
    bool operator()(const U& u) const { return solve(*this,u); }
                                               ^
../../patterns/constructor.hpp:193:16: note: in instantiation of function template specialization 'mch::expr<mch::addition, mch::ref2<mch::var<unsigned long> >, mch::value<int> >::operator()<unsigned long>' requested here
        return m_p1(*t) ? t : 0;
               ^
algebraic.cpp:186:9: note: in instantiation of member function 'mch::constr1<unsigned long, 18446744073709551615, mch::expr<mch::addition, mch::ref2<mch::var<unsigned long> >, mch::value<int> >, void>::match_structure' requested here
        When(m+0) std::cout << m << "+0" << std::endl;
        ^
../../match.hpp:950:23: note: expanded from macro 'When'
  #define  When       WhenQ
                      ^
../../match.hpp:806:25: note: expanded from macro 'WhenQ'
#define WhenQ(...)      XTL_SUBCLAUSE_CONTINUE(__VA_ARGS__) processed = true;
                        ^
../../match.hpp:297:185: note: expanded from macro 'XTL_SUBCLAUSE_CONTINUE'
#define XTL_SUBCLAUSE_CONTINUE(...) } XTL_NON_FALL_THROUGH_ONLY(else) XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true, XTL_UNLIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
                                                                                                                                                                                        ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../macros.hpp:55:50: note: expanded from macro 'XTL_IF'
#define XTL_IF(a,b,...) XTL_CAT2(_XTL_IF_, a)(b, __VA_ARGS__)
                                                 ^
../../macros.hpp:88:26: note: expanded from macro '_XTL_IF_0'
#define _XTL_IF_0(a,...) __VA_ARGS__
                         ^
../../config.hpp:525:88: note: expanded from macro 'XTL_STATIC_IF'
#define XTL_STATIC_IF(c) XTL_WARNING_PUSH XTL_WARNING_IGNORE_CONSTANT_CONDITIONAL if ((c)) XTL_WARNING_POP
                                                                                       ^
In file included from algebraic.cpp:49:
In file included from ../../patterns/n+k.hpp:48:
../../patterns/exprtmpl.hpp:74:172: warning: comparison of integers of different signs: 'unsigned long' and 'const int' [-Wsign-compare]
struct equal           { template <class A, class B> auto operator()(A&& a, B&& b) const -> decltype(std::forward<A>(a) == std::forward<B>(b)) { return std::forward<A>(a) == std::forward<B>(b); } };
                                                                                                                                                        ~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~
../../patterns/n+k.hpp:180:82: note: in instantiation of function template specialization 'mch::equal::operator()<unsigned long, const int &>' requested here
inline typename expr<F,E1,E2>::result_type eval(const expr<F,E1,E2>& e) { return F()(eval(e.m_e1),eval(e.m_e2)); }
                                                                                 ^
../../patterns/guard.hpp:76:59: note: in instantiation of function template specialization 'mch::eval<mch::equal, mch::expr<mch::gcd_functor, mch::ref2<mch::var<unsigned long> >, mch::ref2<mch::var<unsigned long> > >, mch::value<int> >' requested here
    bool operator()(const U& u) const { return m_p1(u) && eval(m_e2); }
                                                          ^
../../patterns/constructor.hpp:193:16: note: in instantiation of function template specialization 'mch::guard<mch::ref2<mch::var<unsigned long> >, mch::expr<mch::equal, mch::expr<mch::gcd_functor, mch::ref2<mch::var<unsigned long> >, mch::ref2<mch::var<unsigned long> > >, mch::value<int> > >::operator()<unsigned long>' requested here
        return m_p1(*t) ? t : 0;
               ^
algebraic.cpp:200:9: note: in instantiation of member function 'mch::constr1<unsigned long, 18446744073709551615, mch::guard<mch::ref2<mch::var<unsigned long> >, mch::expr<mch::equal, mch::expr<mch::gcd_functor, mch::ref2<mch::var<unsigned long> >, mch::ref2<mch::var<unsigned long> > >, mch::value<int> > >, void>::match_structure' requested here
        When(m |= gcd(m,m2) == 3)   std::cout << "gcd-3"   << std::endl;
        ^
../../match.hpp:950:23: note: expanded from macro 'When'
  #define  When       WhenQ
                      ^
../../match.hpp:806:25: note: expanded from macro 'WhenQ'
#define WhenQ(...)      XTL_SUBCLAUSE_CONTINUE(__VA_ARGS__) processed = true;
                        ^
../../match.hpp:297:185: note: expanded from macro 'XTL_SUBCLAUSE_CONTINUE'
#define XTL_SUBCLAUSE_CONTINUE(...) } XTL_NON_FALL_THROUGH_ONLY(else) XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true, XTL_UNLIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
                                                                                                                                                                                        ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../macros.hpp:55:50: note: expanded from macro 'XTL_IF'
#define XTL_IF(a,b,...) XTL_CAT2(_XTL_IF_, a)(b, __VA_ARGS__)
                                                 ^
../../macros.hpp:88:26: note: expanded from macro '_XTL_IF_0'
#define _XTL_IF_0(a,...) __VA_ARGS__
                         ^
../../config.hpp:525:88: note: expanded from macro 'XTL_STATIC_IF'
#define XTL_STATIC_IF(c) XTL_WARNING_PUSH XTL_WARNING_IGNORE_CONSTANT_CONDITIONAL if ((c)) XTL_WARNING_POP
                                                                                       ^
3 warnings generated.
--------------------------------------------------------------------------------
Linking algebraic.exe ...
c++ -o algebraic.exe -lstdc++ algebraic.o -lstdc++
================================================================================
Done building algebraic.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o category.o category.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name category.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/category.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o category.o -x c++ category.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from category.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
category.cpp:166:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(TypeArg( Left<X,Y>), x) return  left<S, T>(f(x));
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
category.cpp:167:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(TypeArg(Right<X,Y>), y) return right<S, T>(g(y));
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
category.cpp:168:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise() return nullptr;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
category.cpp:168:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise() return nullptr;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from category.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
../../unisyn.hpp:346:51: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        local_data.switch_info_ptr = &static_data.get(subject_ptr);
                                                  ^
category.cpp:164:5: note: in instantiation of member function 'mch::unified_switch<Either<double, char>, void>::choose' requested here
    Match(e)
    ^
../../match.hpp:947:23: note: expanded from macro 'Match'
  #define  Match      MatchQ
                      ^
../../match.hpp:729:45: note: expanded from macro 'MatchQ'
        size_t jump_target = switch_traits::choose(subject_ptr,static_data,local_data); \
                                            ^
category.cpp:186:32: note: in instantiation of function template specialization 'lift_ex2<double, char, int, bool>' requested here
        const Either<int,bool>* pa3 = lift_ex2(*pa,my_f,my_g);
                                      ^
9 warnings generated.
--------------------------------------------------------------------------------
Linking category.exe ...
c++ -o category.exe -lstdc++ category.o -lstdc++
================================================================================
Done building category.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o cppcon-matching.o cppcon-matching.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name cppcon-matching.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/cppcon-matching.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o cppcon-matching.o -x c++ cppcon-matching.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from cppcon-matching.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from cppcon-matching.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:580:170: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    template <typename S1> inline auto get(const S1* s1) -> typename std::enable_if< std::is_polymorphic<S1>::value,T&>::type { intptr_t vtbl[1] = {vtbl_of(s1)}; return get(vtbl); }
                                                                                                                                                                         ^
cppcon-matching.cpp:76:5: note: in instantiation of function template specialization 'mch::vtbl_map<1, mch::type_switch_info<1> >::get<BoolExp>' requested here
    Match(exp)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from cppcon-matching.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:585:244: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    template <typename S1, typename S2> inline auto get(const S1* s1, const S2* s2) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value,T&>::type { intptr_t vtbl[2] = {vtbl_of(s1),vtbl_of(s2)}; return get(vtbl); }
                                                                                                                                                                                                                                                   ^
cppcon-matching.cpp:164:5: note: in instantiation of function template specialization 'mch::vtbl_map<2, mch::type_switch_info<2> >::get<BoolExp, BoolExp>' requested here
    Match(x1,x2)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
3 warnings generated.
--------------------------------------------------------------------------------
Linking cppcon-matching.exe ...
c++ -o cppcon-matching.exe -lstdc++ cppcon-matching.o -lstdc++
================================================================================
Done building cppcon-matching.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o cppcon-visitors.o cppcon-visitors.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name cppcon-visitors.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/cppcon-visitors.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o cppcon-visitors.o -x c++ cppcon-visitors.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking cppcon-visitors.exe ...
c++ -o cppcon-visitors.exe -lstdc++ cppcon-visitors.o -lstdc++
================================================================================
Done building cppcon-visitors.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o example01.o example01.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name example01.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/example01.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o example01.o -x c++ example01.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from example01.cpp:46:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
example01.cpp:86:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Circle)   return matched->center;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example01.cpp:86:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Circle)   return matched->center;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
example01.cpp:87:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Square)   return matched->upper_left;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example01.cpp:87:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Square)   return matched->upper_left;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
example01.cpp:88:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Triangle) return matched->first;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example01.cpp:88:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Triangle) return matched->first;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
example01.cpp:89:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Otherwise()    return loc(0,0);
    ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example01.cpp:89:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Otherwise()    return loc(0,0);
    ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example01.cpp:46:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
../../unisyn.hpp:346:51: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        local_data.switch_info_ptr = &static_data.get(subject_ptr);
                                                  ^
example01.cpp:84:5: note: in instantiation of member function 'mch::unified_switch<Shape, void>::choose' requested here
    Match(shape)
    ^
../../match.hpp:947:23: note: expanded from macro 'Match'
  #define  Match      MatchQ
                      ^
../../match.hpp:729:45: note: expanded from macro 'MatchQ'
        size_t jump_target = switch_traits::choose(subject_ptr,static_data,local_data); \
                                            ^
14 warnings generated.
--------------------------------------------------------------------------------
Linking example01.exe ...
c++ -o example01.exe -lstdc++ example01.o -lstdc++
================================================================================
Done building example01.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o example02.o example02.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name example02.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/example02.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o example02.o -x c++ example02.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from example02.cpp:50:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from example02.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example02.cpp:90:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(const Circle&   x) return x.center;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example02.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example02.cpp:91:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(const Square&   x) return x.upper_left;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example02.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example02.cpp:92:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(const Triangle& x) return x.first;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example02.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example02.cpp:93:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Otherwise()             return loc(0,0);
    ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:308:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(const source_type& _dummy_ XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
example02.cpp:93:5: warning: unused variable '_dummy_' [-Wunused-variable]
    Otherwise()             return loc(0,0);
    ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:25: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                        ^
../../match.hpp:308:39: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(const source_type& _dummy_ XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
                                      ^
note: (skipping 5 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../macros.hpp:58:25: note: expanded from macro 'XTL_EXPAND'
#define XTL_EXPAND(...) __VA_ARGS__
                        ^
../../macros.hpp:55:50: note: expanded from macro 'XTL_IF'
#define XTL_IF(a,b,...) XTL_CAT2(_XTL_IF_, a)(b, __VA_ARGS__)
                                                 ^
../../macros.hpp:88:26: note: expanded from macro '_XTL_IF_0'
#define _XTL_IF_0(a,...) __VA_ARGS__
                         ^
In file included from example02.cpp:50:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
../../unisyn.hpp:346:51: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        local_data.switch_info_ptr = &static_data.get(subject_ptr);
                                                  ^
example02.cpp:88:5: note: in instantiation of member function 'mch::unified_switch<Shape, void>::choose' requested here
    Match(shape)
    ^
../../match.hpp:947:23: note: expanded from macro 'Match'
  #define  Match      MatchQ
                      ^
../../match.hpp:729:45: note: expanded from macro 'MatchQ'
        size_t jump_target = switch_traits::choose(subject_ptr,static_data,local_data); \
                                            ^
11 warnings generated.
--------------------------------------------------------------------------------
Linking example02.exe ...
c++ -o example02.exe -lstdc++ example02.o -lstdc++
================================================================================
Done building example02.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o example03.o example03.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name example03.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/example03.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o example03.o -x c++ example03.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from example03.cpp:50:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from example03.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example03.cpp:99:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(const Value&  x) return x.value;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example03.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example03.cpp:100:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(const Plus&   x) return eval(x.e1) + eval(x.e2);
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example03.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example03.cpp:101:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(const Minus&  x) return eval(x.e1) - eval(x.e2);
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example03.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example03.cpp:102:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(const Times&  y) return eval(y.e1) * eval(y.e2);
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example03.cpp:50:
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
example03.cpp:103:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(const Divide& z) return eval(z.e1) / eval(z.e2);
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from example03.cpp:50:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
../../unisyn.hpp:346:51: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        local_data.switch_info_ptr = &static_data.get(subject_ptr);
                                                  ^
example03.cpp:97:5: note: in instantiation of member function 'mch::unified_switch<Expr, void>::choose' requested here
    Match(e)
    ^
../../match.hpp:947:23: note: expanded from macro 'Match'
  #define  Match      MatchQ
                      ^
../../match.hpp:729:45: note: expanded from macro 'MatchQ'
        size_t jump_target = switch_traits::choose(subject_ptr,static_data,local_data); \
                                            ^
12 warnings generated.
--------------------------------------------------------------------------------
Linking example03.exe ...
c++ -o example03.exe -lstdc++ example03.o -lstdc++
================================================================================
Done building example03.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o example04.o example04.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name example04.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/example04.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o example04.o -x c++ example04.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from example04.cpp:46:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from example04.cpp:46:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:580:170: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    template <typename S1> inline auto get(const S1* s1) -> typename std::enable_if< std::is_polymorphic<S1>::value,T&>::type { intptr_t vtbl[1] = {vtbl_of(s1)}; return get(vtbl); }
                                                                                                                                                                         ^
example04.cpp:109:5: note: in instantiation of function template specialization 'mch::vtbl_map<1, mch::type_switch_info<1> >::get<Expr>' requested here
    Match(e)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
2 warnings generated.
--------------------------------------------------------------------------------
Linking example04.exe ...
c++ -o example04.exe -lstdc++ example04.o -lstdc++
================================================================================
Done building example04.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o example05.o example05.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name example05.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/example05.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o example05.o -x c++ example05.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from example05.cpp:45:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
1 warning generated.
--------------------------------------------------------------------------------
Linking example05.exe ...
c++ -o example05.exe -lstdc++ example05.o -lstdc++
================================================================================
Done building example05.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o exp.o exp.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name exp.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/exp.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o exp.o -x c++ exp.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from exp.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
exp.cpp:180:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Value, n)   return n;
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
exp.cpp:181:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Plus,  a,b) return myeval(a) + myeval(b);
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
exp.cpp:182:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Minus, a,b) return myeval(a) - myeval(b);
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
exp.cpp:183:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Times, a,b) return myeval(a) * myeval(b);
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
exp.cpp:184:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    Case(Divide,a,b) return myeval(a) / myeval(b);
    ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
In file included from exp.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
../../unisyn.hpp:346:51: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        local_data.switch_info_ptr = &static_data.get(subject_ptr);
                                                  ^
exp.cpp:178:5: note: in instantiation of member function 'mch::unified_switch<Expr, void>::choose' requested here
    Match(e)
    ^
../../match.hpp:947:23: note: expanded from macro 'Match'
  #define  Match      MatchQ
                      ^
../../match.hpp:729:45: note: expanded from macro 'MatchQ'
        size_t jump_target = switch_traits::choose(subject_ptr,static_data,local_data); \
                                            ^
12 warnings generated.
--------------------------------------------------------------------------------
Linking exp.exe ...
c++ -o exp.exe -lstdc++ exp.o -lstdc++
================================================================================
Done building exp.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o exp2.o exp2.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name exp2.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/exp2.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o exp2.o -x c++ exp2.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from exp2.cpp:45:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
exp2.cpp:69:9: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
        struct { int value; };
        ^
exp2.cpp:70:9: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
        struct { MyExpr* exp1; MyExpr* exp2; };
        ^
exp2.cpp:69:9: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
        struct { int value; };
        ^
exp2.cpp:70:9: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
        struct { MyExpr* exp1; MyExpr* exp2; };
        ^
In file included from exp2.cpp:45:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:580:170: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    template <typename S1> inline auto get(const S1* s1) -> typename std::enable_if< std::is_polymorphic<S1>::value,T&>::type { intptr_t vtbl[1] = {vtbl_of(s1)}; return get(vtbl); }
                                                                                                                                                                         ^
exp2.cpp:260:5: note: in instantiation of function template specialization 'mch::vtbl_map<1, mch::type_switch_info<1> >::get<Expr>' requested here
    Match(e)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from exp2.cpp:45:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:585:244: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    template <typename S1, typename S2> inline auto get(const S1* s1, const S2* s2) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value,T&>::type { intptr_t vtbl[2] = {vtbl_of(s1),vtbl_of(s2)}; return get(vtbl); }
                                                                                                                                                                                                                                                   ^
exp2.cpp:308:5: note: in instantiation of function template specialization 'mch::vtbl_map<2, mch::type_switch_info<2> >::get<Expr, Expr>' requested here
    Match(e1               , e2                 )
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
7 warnings generated.
--------------------------------------------------------------------------------
Linking exp2.exe ...
c++ -o exp2.exe -lstdc++ exp2.o -lstdc++
================================================================================
Done building exp2.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o expr.o expr.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name expr.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/expr.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o expr.o -x c++ expr.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking expr.exe ...
c++ -o expr.exe -lstdc++ expr.o -lstdc++
================================================================================
Done building expr.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o expr_meta.o expr_meta.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name expr_meta.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/expr_meta.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o expr_meta.o -x c++ expr_meta.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking expr_meta.exe ...
c++ -o expr_meta.exe -lstdc++ expr_meta.o -lstdc++
================================================================================
Done building expr_meta.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o extractor.o extractor.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name extractor.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/extractor.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o extractor.o -x c++ extractor.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from extractor.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
1 warning generated.
--------------------------------------------------------------------------------
Linking extractor.exe ...
c++ -o extractor.exe -lstdc++ extractor.o -lstdc++
================================================================================
Done building extractor.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o filter.o filter.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name filter.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/filter.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o filter.o -x c++ filter.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking filter.exe ...
c++ -o filter.exe -lstdc++ filter.o -lstdc++
================================================================================
Done building filter.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o guards.o guards.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name guards.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/guards.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o guards.o -x c++ guards.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from guards.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
1 warning generated.
--------------------------------------------------------------------------------
Linking guards.exe ...
c++ -o guards.exe -lstdc++ guards.o -lstdc++
================================================================================
Done building guards.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o memoized_cast.o memoized_cast.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name memoized_cast.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/memoized_cast.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o memoized_cast.o -x c++ memoized_cast.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from memoized_cast.cpp:47:
In file included from ../../memoized_cast.hpp:61:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from memoized_cast.cpp:47:
../../memoized_cast.hpp:125:69: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    XTL_PRELOADABLE_LOCAL_STATIC(vtblmap<dyn_cast_info>,offset_map,T);
                                                                    ^
../../config.hpp:161:13: note: macro 'XTL_PRELOADABLE_LOCAL_STATIC' defined here
    #define XTL_PRELOADABLE_LOCAL_STATIC(Type,Name,UID,...) Type& Name = mch::preallocated<Type,UID>::value
            ^
In file included from memoized_cast.cpp:47:
../../memoized_cast.hpp:142:69: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
    XTL_PRELOADABLE_LOCAL_STATIC(vtblmap<dyn_cast_info>,offset_map,S);
                                                                    ^
../../config.hpp:161:13: note: macro 'XTL_PRELOADABLE_LOCAL_STATIC' defined here
    #define XTL_PRELOADABLE_LOCAL_STATIC(Type,Name,UID,...) Type& Name = mch::preallocated<Type,UID>::value
            ^
In file included from memoized_cast.cpp:47:
In file included from ../../memoized_cast.hpp:61:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<std::__1::vector<long, std::__1::allocator<long> > >::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
../../memoized_cast.hpp:143:38: note: in instantiation of member function 'mch::vtblmap<std::__1::vector<long, std::__1::allocator<long> > >::get' requested here
    dyn_cast_info& sdci = offset_map.get(p);
                                     ^
../../memoized_cast.hpp:165:30: note: in instantiation of function template specialization 'mch::per_source_offset_of<A>' requested here
    std::ptrdiff_t& offset = per_source_offset_of<source_type>(p,ti);
                             ^
../../memoized_cast.hpp:192:26: note: in instantiation of function template specialization 'mch::memoized_cast_non_null<const B *, A>' requested here
    return const_cast<T>(memoized_cast_non_null<target_type const*>(const_cast<source_type const*>(p)));
                         ^
../../memoized_cast.hpp:226:20: note: in instantiation of function template specialization 'mch::memoized_cast_non_null<B *, A>' requested here
            return memoized_cast_non_null<T*>(p);
                   ^
../../memoized_cast.hpp:256:42: note: in instantiation of function template specialization 'mch::memoized_cast_helper<B *>::go<A>' requested here
    return mch::memoized_cast_helper<T>::go(std::forward<S>(s));
                                         ^
memoized_cast.cpp:139:13: note: in instantiation of function template specialization 'memoized_cast<B *, A *&>' requested here
    B* bm = memoized_cast<B*>(am); XTL_UNUSED(bm);
            ^
4 warnings generated.
--------------------------------------------------------------------------------
Linking memoized_cast.exe ...
c++ -o memoized_cast.exe -lstdc++ memoized_cast.o -lstdc++
================================================================================
Done building memoized_cast.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o morton.o morton.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name morton.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/morton.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o morton.o -x c++ morton.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking morton.exe ...
c++ -o morton.exe -lstdc++ morton.o -lstdc++
================================================================================
Done building morton.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o non_unique_problem.o non_unique_problem.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name non_unique_problem.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/non_unique_problem.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o non_unique_problem.o -x c++ non_unique_problem.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking non_unique_problem.exe ...
c++ -o non_unique_problem.exe -lstdc++ non_unique_problem.o -lstdc++
================================================================================
Done building non_unique_problem.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o non_unique_workaround.o non_unique_workaround.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name non_unique_workaround.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/non_unique_workaround.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o non_unique_workaround.o -x c++ non_unique_workaround.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from non_unique_workaround.cpp:49:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from non_unique_workaround.cpp:49:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
non_unique_workaround.cpp:204:5: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    Match(g)
    ^
../../type_switchN.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
2 warnings generated.
--------------------------------------------------------------------------------
Linking non_unique_workaround.exe ...
c++ -o non_unique_workaround.exe -lstdc++ non_unique_workaround.o -lstdc++
================================================================================
Done building non_unique_workaround.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o one_of.o one_of.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name one_of.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/one_of.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o one_of.o -x c++ one_of.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from one_of.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
1 warning generated.
--------------------------------------------------------------------------------
Linking one_of.exe ...
c++ -o one_of.exe -lstdc++ one_of.o -lstdc++
================================================================================
Done building one_of.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o pattern_composition.o pattern_composition.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name pattern_composition.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/pattern_composition.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o pattern_composition.o -x c++ pattern_composition.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
--------------------------------------------------------------------------------
Linking pattern_composition.exe ...
c++ -o pattern_composition.exe -lstdc++ pattern_composition.o -lstdc++
================================================================================
Done building pattern_composition.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o predicate.o predicate.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name predicate.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/predicate.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o predicate.o -x c++ predicate.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from predicate.cpp:45:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
1 warning generated.
--------------------------------------------------------------------------------
Linking predicate.exe ...
c++ -o predicate.exe -lstdc++ predicate.o -lstdc++
================================================================================
Done building predicate.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o prolog-pat.o prolog-pat.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name prolog-pat.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/prolog-pat.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o prolog-pat.o -x c++ prolog-pat.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from prolog-pat.cpp:346:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from prolog-pat.cpp:346:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:580:170: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    template <typename S1> inline auto get(const S1* s1) -> typename std::enable_if< std::is_polymorphic<S1>::value,T&>::type { intptr_t vtbl[1] = {vtbl_of(s1)}; return get(vtbl); }
                                                                                                                                                                         ^
prolog-pat.cpp:380:5: note: in instantiation of function template specialization 'mch::vtbl_map<1, mch::type_switch_info<1> >::get<Term>' requested here
    Match(t)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from prolog-pat.cpp:346:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:585:244: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    template <typename S1, typename S2> inline auto get(const S1* s1, const S2* s2) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value,T&>::type { intptr_t vtbl[2] = {vtbl_of(s1),vtbl_of(s2)}; return get(vtbl); }
                                                                                                                                                                                                                                                   ^
prolog-pat.cpp:420:5: note: in instantiation of function template specialization 'mch::vtbl_map<2, mch::type_switch_info<2> >::get<Term, Term>' requested here
    Match(left,right)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
3 warnings generated.
--------------------------------------------------------------------------------
Linking prolog-pat.exe ...
c++ -o prolog-pat.exe -lstdc++ prolog-pat.o -lstdc++
================================================================================
Done building prolog-pat.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o prolog-pat2.o prolog-pat2.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name prolog-pat2.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/prolog-pat2.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o prolog-pat2.o -x c++ prolog-pat2.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from prolog-pat2.cpp:354:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from prolog-pat2.cpp:354:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:580:170: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    template <typename S1> inline auto get(const S1* s1) -> typename std::enable_if< std::is_polymorphic<S1>::value,T&>::type { intptr_t vtbl[1] = {vtbl_of(s1)}; return get(vtbl); }
                                                                                                                                                                         ^
prolog-pat2.cpp:398:5: note: in instantiation of function template specialization 'mch::vtbl_map<1, mch::type_switch_info<1> >::get<Term>' requested here
    Match(t)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from prolog-pat2.cpp:354:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:585:244: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    template <typename S1, typename S2> inline auto get(const S1* s1, const S2* s2) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value,T&>::type { intptr_t vtbl[2] = {vtbl_of(s1),vtbl_of(s2)}; return get(vtbl); }
                                                                                                                                                                                                                                                   ^
prolog-pat2.cpp:453:5: note: in instantiation of function template specialization 'mch::vtbl_map<2, mch::type_switch_info<2> >::get<Term, Term>' requested here
    Match(left,right)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from prolog-pat2.cpp:355:
In file included from ../../patterns/address.hpp:47:
../../patterns/primitive.hpp:250:30: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]
        return base::value() == u;
               ~~~~~~~~~~~~~ ^  ~
../../patterns/primitive.hpp:472:65: note: in instantiation of function template specialization 'mch::var<int>::operator()<unsigned long>' requested here
    template <typename T> bool operator()(T&& t) const { return m_pat(std::forward<T>(t)); }
                                                                ^
../../patterns/../metatools.hpp:295:12: note: in instantiation of function template specialization 'mch::ref1<mch::var<int> >::operator()<unsigned long>' requested here
    return e(apply_member(c, m));
           ^
../../patterns/constructor.hpp:247:16: note: in instantiation of function template specialization 'mch::apply_expression<mch::ref2<mch::var<int> >, Structure, unsigned long (Structure::*)() const>' requested here
            && apply_expression(m_p2, t, bindings<T,layout>::member1()) // here means you did not provide bindings for type_being_matched and layout
               ^
../../patterns/constructor.hpp:277:74: note: in instantiation of member function 'mch::constr2<Structure, 18446744073709551615, mch::ref2<mch::var<std::__1::basic_string<char> > >, mch::ref2<mch::var<int> > >::match_structure' requested here
                          const T* operator()(const T& t) const { return match_structure(&t); } // We assume references to be checked for not nullptr
                                                                         ^
prolog-pat2.cpp:462:5: note: in instantiation of member function 'mch::constr2<Structure, 18446744073709551615, mch::ref2<mch::var<std::__1::basic_string<char> > >, mch::ref2<mch::var<int> > >::operator()' requested here
    Case(C<Structure>(s,n),   C<Structure>(+s,+n) ) 
    ^
../../type_switchN-patterns.hpp:249:23: note: expanded from macro 'Case'
    #define Case(...) CaseN(XTL_NARG(__VA_ARGS__), __VA_ARGS__);
                      ^
../../type_switchN-patterns.hpp:239:40: note: expanded from macro 'CaseN'
            if (XTL_REPEAT_WITH(&&, N, XTL_MATCH_PATTERN_TO_TARGET, __VA_ARGS__)) {
                                       ^
../../macros.hpp:119:60: note: expanded from macro 'XTL_REPEAT_WITH'
#define XTL_REPEAT_WITH(s,n,m,...) XTL_REPEAT_WITH_ ## n(s,m,__VA_ARGS__)
                                                           ^
../../macros.hpp:108:56: note: expanded from macro 'XTL_REPEAT_WITH_2'
#define XTL_REPEAT_WITH_2(s,m,...) XTL_REPEAT_WITH_1(s,m,__VA_ARGS__) s m(1,__VA_ARGS__)
                                                       ^
../../macros.hpp:107:73: note: expanded from macro 'XTL_REPEAT_WITH_1'
#define XTL_REPEAT_WITH_1(s,m,...)                                      m(0,__VA_ARGS__)
                                                                        ^
../../type_switchN-patterns.hpp:217:86: note: expanded from macro 'XTL_MATCH_PATTERN_TO_TARGET'
#define XTL_MATCH_PATTERN_TO_TARGET(i,...) mch::filter(XTL_SELECT_ARG(i,__VA_ARGS__))(match##i)
                                                                                     ^
4 warnings generated.
--------------------------------------------------------------------------------
Linking prolog-pat2.exe ...
c++ -o prolog-pat2.exe -lstdc++ prolog-pat2.o -lstdc++
================================================================================
Done building prolog-pat2.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o prolog.o prolog.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name prolog.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/prolog.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o prolog.o -x c++ prolog.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from prolog.cpp:343:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from prolog.cpp:343:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
prolog.cpp:349:5: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    Match(t)
    ^
../../type_switchN-decl.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-decl.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from prolog.cpp:343:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
prolog.cpp:379:5: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    Match(a,b)
    ^
../../type_switchN-decl.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-decl.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
3 warnings generated.
--------------------------------------------------------------------------------
Linking prolog.exe ...
c++ -o prolog.exe -lstdc++ prolog.o -lstdc++
================================================================================
Done building prolog.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o regex.o regex.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name regex.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/regex.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o regex.o -x c++ regex.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from regex.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
regex.cpp:94:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()                                             std::cout << "UNRECOGNIZED"; break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
regex.cpp:94:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()                                             std::cout << "UNRECOGNIZED"; break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
4 warnings generated.
--------------------------------------------------------------------------------
Linking regex.exe ...
c++ -o regex.exe -lstdc++ regex.o -lstdc++
================================================================================
Done building regex.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o shape.o shape.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name shape.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/shape.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o shape.o -x c++ shape.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from shape.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from shape.cpp:46:
In file included from ./shape_bindings.hpp:48:
./shape.hpp:137:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc center;     double radius; }; // as_circle;
                ^
./shape.hpp:138:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc upper_left; double size; };   // as_square;
                ^
./shape.hpp:139:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc first, second, third; };      // as_triangle;
                ^
./shape.hpp:137:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc center;     double radius; }; // as_circle;
                ^
./shape.hpp:138:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc upper_left; double size; };   // as_square;
                ^
./shape.hpp:139:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc first, second, third; };      // as_triangle;
                ^
7 warnings generated.
--------------------------------------------------------------------------------
Linking shape.exe ...
c++ -o shape.exe -lstdc++ shape.o -lstdc++
================================================================================
Done building shape.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o shape4.o shape4.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name shape4.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/shape4.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o shape4.o -x c++ shape4.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from shape4.cpp:47:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
shape4.cpp:120:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape4.cpp:121:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape4.cpp:122:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape4.cpp:120:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape4.cpp:121:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape4.cpp:122:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape4.cpp:177:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseK(Circle,_,x) std::cout << "Circle"   << std::endl; m += x;       XTL_UNUSED(_); break;
        ^
../../match.hpp:478:25: note: expanded from macro 'CaseK'
#define CaseK(...)      QuaK(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:472:43: note: expanded from macro 'QuaK'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:178:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseK(Square,_,x) std::cout << "Square"   << std::endl; m += x;       XTL_UNUSED(_); break;
        ^
../../match.hpp:478:25: note: expanded from macro 'CaseK'
#define CaseK(...)      QuaK(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:472:43: note: expanded from macro 'QuaK'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:179:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseK(Triangle,l) std::cout << "Triangle" << std::endl; m += l.first; break;
        ^
../../match.hpp:478:25: note: expanded from macro 'CaseK'
#define CaseK(...)      QuaK(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:472:43: note: expanded from macro 'QuaK'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:193:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle)   std::cout << "Circle"   << std::endl; m += matched->radius;      break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:193:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle)   std::cout << "Circle"   << std::endl; m += matched->radius;      break;
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape4.cpp:194:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square)   std::cout << "Square"   << std::endl; m += matched->side;        break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:194:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square)   std::cout << "Square"   << std::endl; m += matched->side;        break;
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape4.cpp:195:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:195:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break;
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape4.cpp:196:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break; // NOTE: Possible to have another type case match
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:196:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break; // NOTE: Possible to have another type case match
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape4.cpp:209:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle,_,x)    std::cout << "Circle"   << std::endl; m += x;       XTL_UNUSED(_); break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:210:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square,_,x)    std::cout << "Square"   << std::endl; m += x;       XTL_UNUSED(_); break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:211:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle,l)    std::cout << "Triangle" << std::endl; m += l.first; break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:212:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle,l)    std::cout << "Triangle" << std::endl; m += l.first; break; // NOTE: Possible to have another regular match
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:225:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseU(ADTShape::circle,_,x)  std::cout << "ADTCircle"   << std::endl; m += x;       XTL_UNUSED(_); break;
        ^
../../match.hpp:509:25: note: expanded from macro 'CaseU'
#define CaseU(...)      QuaU(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:506:43: note: expanded from macro 'QuaU'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:226:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseU(ADTShape::square,_,x)  std::cout << "ADTSquare"   << std::endl; m += x;       XTL_UNUSED(_); break;
        ^
../../match.hpp:509:25: note: expanded from macro 'CaseU'
#define CaseU(...)      QuaU(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:506:43: note: expanded from macro 'QuaU'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape4.cpp:227:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseU(ADTShape::triangle,cl) std::cout << "ADTTriangle" << std::endl; m += cl.first;break;
        ^
../../match.hpp:509:25: note: expanded from macro 'CaseU'
#define CaseU(...)      QuaU(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:506:43: note: expanded from macro 'QuaU'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
In file included from shape4.cpp:47:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
shape4.cpp:191:9: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        MatchP(shapes[i])
        ^
../../match.hpp:386:65: note: expanded from macro 'MatchP'
        mch::type_switch_info& __switch_info = __vtbl2lines_map.get(subject_ptr); \
                                                                ^
40 warnings generated.
--------------------------------------------------------------------------------
Linking shape4.exe ...
c++ -o shape4.exe -lstdc++ shape4.o -lstdc++
================================================================================
Done building shape4.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o shape5.o shape5.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name shape5.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/shape5.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o shape5.o -x c++ shape5.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from shape5.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
shape5.cpp:124:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape5.cpp:125:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape5.cpp:126:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape5.cpp:124:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape5.cpp:125:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape5.cpp:126:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape5.cpp:187:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle)   std::cout << "Circle"   << std::endl; m += matched->radius;      break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:187:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle)   std::cout << "Circle"   << std::endl; m += matched->radius;      break;
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:188:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square)   std::cout << "Square"   << std::endl; m += matched->side;        break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:188:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square)   std::cout << "Square"   << std::endl; m += matched->side;        break;
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:189:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:189:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break;
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:190:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break; // NOTE: Possible to have another type case match
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:190:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle) std::cout << "Triangle" << std::endl; m += matched->first.first; break; // NOTE: Possible to have another type case match
        ^
../../match.hpp:441:98: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:205:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle,_,r)    std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:206:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square,_,r)    std::cout << "Square"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:207:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:208:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; break; // NOTE: Possible to have another regular match
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:230:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()              std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:230:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()              std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:245:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(Circle,c,r)  std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:246:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(Square,c,s)  std::cout << "Square"   << std::endl; m += s;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:247:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(Triangle,p)  std::cout << "Triangle" << std::endl; m += p.first; break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:248:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:248:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:292:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(ADTShape::circle,c,r)  std::cout << "ADTCircle"   << std::endl; m += r;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:293:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(ADTShape::square,c,s)  std::cout << "ADTSquare"   << std::endl; m += s;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:294:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(ADTShape::triangle,p)  std::cout << "ADTTriangle" << std::endl; m += p.first; break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:343:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:343:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:358:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)   const Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape5.cpp:359:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)   const Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape5.cpp:360:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle) const Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape5.cpp:361:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:361:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:370:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)         Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape5.cpp:371:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)         Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape5.cpp:372:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle)       Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape5.cpp:373:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:373:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape5.cpp:384:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Circle,c,r)  std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:385:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Square,c,s)  std::cout << "Square"   << std::endl; m += s;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:386:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Triangle,p)  std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:387:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape5.cpp:387:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from shape5.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
shape5.cpp:185:9: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        MatchP(shapes[i])
        ^
../../match.hpp:386:65: note: expanded from macro 'MatchP'
        mch::type_switch_info& __switch_info = __vtbl2lines_map.get(subject_ptr); \
                                                                ^
70 warnings generated.
--------------------------------------------------------------------------------
Linking shape5.exe ...
c++ -o shape5.exe -lstdc++ shape5.o -lstdc++
================================================================================
Done building shape5.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o shape6.o shape6.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name shape6.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/shape6.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o shape6.o -x c++ shape6.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from shape6.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
shape6.cpp:128:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape6.cpp:129:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape6.cpp:130:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape6.cpp:128:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape6.cpp:129:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape6.cpp:130:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape6.cpp:193:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseE(Circle,_,r)    std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(_); // break;
        ^
../../match.hpp:541:25: note: expanded from macro 'CaseE'
#define CaseE(...)      QuaE(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:538:43: note: expanded from macro 'QuaE'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:194:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseE(Square,_,r)    std::cout << "Square"   << std::endl; m += r;       XTL_UNUSED(_); // break;
        ^
../../match.hpp:541:25: note: expanded from macro 'CaseE'
#define CaseE(...)      QuaE(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:538:43: note: expanded from macro 'QuaE'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:195:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseE(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; // break;
        ^
../../match.hpp:541:25: note: expanded from macro 'CaseE'
#define CaseE(...)      QuaE(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:538:43: note: expanded from macro 'QuaE'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:212:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Circle,_,r)    std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:213:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Square,_,r)    std::cout << "Square"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:214:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:215:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseP(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; break; // NOTE: Possible to have another regular match
        ^
../../match.hpp:441:25: note: expanded from macro 'CaseP'
#define CaseP(...)      QuaP(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:415:47: note: expanded from macro 'QuaP'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:237:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()              std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:237:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()              std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape6.cpp:252:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(Circle,c,r)  std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:253:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(Square,c,s)  std::cout << "Square"   << std::endl; m += s;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:254:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(Triangle,p)  std::cout << "Triangle" << std::endl; m += p.first; break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:255:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:255:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape6.cpp:299:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(ADTShape::circle,c,r)  std::cout << "ADTCircle"   << std::endl; m += r;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:300:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(ADTShape::square,c,s)  std::cout << "ADTSquare"   << std::endl; m += s;       XTL_UNUSED(c); break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:301:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Case(ADTShape::triangle,p)  std::cout << "ADTTriangle" << std::endl; m += p.first; break;
            ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:350:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:350:13: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
            Otherwise()
            ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape6.cpp:365:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)   const Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape6.cpp:366:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)   const Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape6.cpp:367:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle) const Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape6.cpp:368:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:368:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape6.cpp:377:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)         Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape6.cpp:378:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)         Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape6.cpp:379:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle)       Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape6.cpp:380:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:380:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape6.cpp:391:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Circle,c,r)  std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:392:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Square,c,s)  std::cout << "Square"   << std::endl; m += s;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:393:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Triangle,p)  std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:394:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape6.cpp:394:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
In file included from shape6.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st.hpp:389:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl); // try to rearrange cache
                       ^
shape6.cpp:210:9: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
        MatchP(shapes[i])
        ^
../../match.hpp:386:65: note: expanded from macro 'MatchP'
        mch::type_switch_info& __switch_info = __vtbl2lines_map.get(subject_ptr); \
                                                                ^
64 warnings generated.
--------------------------------------------------------------------------------
Linking shape6.exe ...
c++ -o shape6.exe -lstdc++ shape6.o -lstdc++
================================================================================
Done building shape6.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o shape7.o shape7.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name shape7.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/shape7.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o shape7.o -x c++ shape7.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from shape7.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
shape7.cpp:123:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape7.cpp:124:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape7.cpp:125:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape7.cpp:123:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape7.cpp:124:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape7.cpp:125:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
In file included from shape7.cpp:45:
../../match.hpp:199:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define  BCS(...) typedef          get_param<bindings>::type D; BCS_(XTL_NARG(__VA_ARGS__),##__VA_ARGS__)
                                                                                           ^
../../match.hpp:199:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
../../match.hpp:199:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
shape7.cpp:188:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseF(Shape)         std::cout << "Shape"    << std::endl; m += 42;      break;
        ^
../../match.hpp:626:25: note: expanded from macro 'CaseF'
#define CaseF(...)      QuaF(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:620:43: note: expanded from macro 'QuaF'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:188:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseF(Shape)         std::cout << "Shape"    << std::endl; m += 42;      break;
        ^
../../match.hpp:626:98: note: expanded from macro 'CaseF'
#define CaseF(...)      QuaF(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
../../macros.hpp:102:47: note: expanded from macro 'XTL_APPLY_VARIADIC_MACRO'
#define XTL_APPLY_VARIADIC_MACRO(macro,tuple) macro tuple
                                              ^
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape7.cpp:189:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseF(Circle,_,r)    std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:626:25: note: expanded from macro 'CaseF'
#define CaseF(...)      QuaF(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:620:43: note: expanded from macro 'QuaF'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:190:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseF(Square,_,r)    std::cout << "Square"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:626:25: note: expanded from macro 'CaseF'
#define CaseF(...)      QuaF(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:620:43: note: expanded from macro 'QuaF'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:191:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseF(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:626:25: note: expanded from macro 'CaseF'
#define CaseF(...)      QuaF(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:620:43: note: expanded from macro 'QuaF'
            XTL_SUBCLAUSE_OPEN(__VA_ARGS__)
                                          ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:203:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)   const Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape7.cpp:204:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)   const Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape7.cpp:205:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle) const Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape7.cpp:206:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:206:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape7.cpp:215:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)         Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape7.cpp:216:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)         Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape7.cpp:217:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle)       Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape7.cpp:218:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:218:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape7.cpp:229:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Circle,c,r)  std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:230:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Square,c,s)  std::cout << "Square"   << std::endl; m += s;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:231:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Triangle,p)  std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:232:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape7.cpp:232:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
40 warnings generated.
--------------------------------------------------------------------------------
Linking shape7.exe ...
c++ -o shape7.exe -lstdc++ shape7.o -lstdc++
================================================================================
Done building shape7.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o shape8.o shape8.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name shape8.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/shape8.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o shape8.o -x c++ shape8.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from shape8.cpp:45:
In file included from ../../match.hpp:111:
In file included from ../../unisyn.hpp:50:
In file included from ../../vtblmap.hpp:50:
../../vtblmap3st.hpp:475:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
shape8.cpp:123:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape8.cpp:124:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape8.cpp:125:3: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
shape8.cpp:123:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc center;     double radius; }; // as_circle;
                ^
shape8.cpp:124:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc upper_left; double size; }; //   as_square;
                ^
shape8.cpp:125:3: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]
                struct { cloc first, second, third; }; //    as_triangle;
                ^
In file included from shape8.cpp:45:
../../match.hpp:199:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define  BCS(...) typedef          get_param<bindings>::type D; BCS_(XTL_NARG(__VA_ARGS__),##__VA_ARGS__)
                                                                                           ^
../../match.hpp:199:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
../../match.hpp:199:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
shape8.cpp:189:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseQ(Circle,_,r)    std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:190:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseQ(Square,_,r)    std::cout << "Square"   << std::endl; m += r;       XTL_UNUSED(_); break;
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:191:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        CaseQ(Triangle,p)    std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:192:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        OtherwiseQ()         std::cout << "Shape"    << std::endl; m += 42;      break;
        ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:192:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        OtherwiseQ()         std::cout << "Shape"    << std::endl; m += 42;      break;
        ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:98: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                                                                                                 ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape8.cpp:204:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)   const Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape8.cpp:205:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)   const Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape8.cpp:206:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle) const Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape8.cpp:207:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:207:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()   const Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape8.cpp:216:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Circle)         Circle*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape8.cpp:217:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Square)         Square*   s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape8.cpp:218:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Qua(Triangle)       Triangle* s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:949:23: note: expanded from macro 'Qua'
  #define  Qua        QuaQ
                      ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
shape8.cpp:219:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:219:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()         Shape*    s = matched; XTL_UNUSED(s); break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
shape8.cpp:230:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Circle,c,r)  std::cout << "Circle"   << std::endl; m += r;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:231:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Square,c,s)  std::cout << "Square"   << std::endl; m += s;       XTL_UNUSED(c); break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:232:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Case(Triangle,p)  std::cout << "Triangle" << std::endl; m += p.first; break;
        ^
../../match.hpp:948:23: note: expanded from macro 'Case'
  #define  Case       CaseQ
                      ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:233:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
../../match.hpp:805:25: note: expanded from macro 'CaseQ'
#define CaseQ(...)      QuaQ(XTL_SELECT_ARG_0(__VA_ARGS__,XTL_EMPTY())) XTL_APPLY_VARIADIC_MACRO(XTL_DECL_BOUND_VARS,(__VA_ARGS__))
                        ^
../../match.hpp:779:47: note: expanded from macro 'QuaQ'
                XTL_SUBCLAUSE_OPEN(__VA_ARGS__) processed = true;
                                              ^
../../match.hpp:296:9: note: macro 'XTL_SUBCLAUSE_OPEN' defined here
#define XTL_SUBCLAUSE_OPEN(T,...)                                     XTL_STATIC_IF(XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), true,   XTL_LIKELY(mch::C<target_type,target_layout>(__VA_ARGS__).match_structure(matched)))) {
        ^
../../match.hpp:228:79: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                                              ^
shape8.cpp:233:9: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        Otherwise()       std::cout << "Other"    << std::endl; m += 2;       break;
        ^
../../match.hpp:952:23: note: expanded from macro 'Otherwise'
  #define  Otherwise  OtherwiseQ
                      ^
../../match.hpp:807:46: note: expanded from macro 'OtherwiseQ'
#define OtherwiseQ(...) XTL_CLAUSE_OTHERWISE(CaseQ,__VA_ARGS__)
                                             ^
../../match.hpp:312:9: note: expanded from macro 'XTL_CLAUSE_OTHERWISE'
        CaseClause(source_type XTL_IF(XTL_IS_EMPTY(__VA_ARGS__), XTL_EMPTY(), ,) __VA_ARGS__)
        ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
../../match.hpp:228:54: note: expanded from macro 'XTL_DECL_BOUND_VARS'
#define XTL_DECL_BOUND_VARS(...) XTL_DECL_BOUND_VAR_(XTL_NARG_EX(__VA_ARGS__),##__VA_ARGS__)
                                                     ^
../../config.hpp:479:31: note: expanded from macro 'XTL_NARG_EX'
    #define XTL_NARG_EX(...)  XTL_NARG_EX_(__VA_ARGS__,XTL_RSEQ_N()) 
                              ^
../../config.hpp:480:55: note: expanded from macro 'XTL_NARG_EX_'
    #define XTL_NARG_EX_(...) XTL_ARG_N_EX(__VA_ARGS__)
                                                      ^
../../config.hpp:442:9: note: macro 'XTL_ARG_N_EX' defined here
#define XTL_ARG_N_EX( _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, Dummy, N, ...) N
        ^
40 warnings generated.
--------------------------------------------------------------------------------
Linking shape8.exe ...
c++ -o shape8.exe -lstdc++ shape8.o -lstdc++
================================================================================
Done building shape8.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o type_switch2.o type_switch2.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name type_switch2.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/type_switch2.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o type_switch2.o -x c++ type_switch2.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from type_switch2.cpp:47:
In file included from ../../type_switch2.hpp:52:
../../vtblmap3st-2.hpp:502:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from type_switch2.cpp:47:
In file included from ../../type_switch2.hpp:52:
../../vtblmap3st-2.hpp:502:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st-2.hpp:406:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl0,vtbl1); // try to rearrange cache
                       ^
type_switch2.cpp:100:5: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
    Match2(s0,s1)
    ^
../../type_switch2.hpp:98:65: note: expanded from macro 'Match2'
        mch::type_switch_info& __switch_info = __vtbl2lines_map.get(subject_ptr0,subject_ptr1); \
                                                                ^
2 warnings generated.
--------------------------------------------------------------------------------
Linking type_switch2.exe ...
c++ -o type_switch2.exe -lstdc++ type_switch2.o -lstdc++
================================================================================
Done building type_switch2.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o type_switch3.o type_switch3.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name type_switch3.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/type_switch3.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o type_switch3.o -x c++ type_switch3.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from type_switch3.cpp:47:
In file included from ../../type_switch3.hpp:52:
../../vtblmap3st-3.hpp:512:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLA(cache_histogram, intptr_t, cache_histogram_size, 1 + ((1<<max_log_size) - 1)/XTL_BIT_SIZE(intptr_t)); // intptr_t cache_histogram[cache_histogram_size];
    ^
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
In file included from type_switch3.cpp:47:
In file included from ../../type_switch3.hpp:52:
../../vtblmap3st-3.hpp:512:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:512:34: note: expanded from macro 'XTL_VLA'
    #define XTL_VLA(v,T,n,N)  T v[n]
                                 ^
../../vtblmap3st-3.hpp:413:24: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::update' requested here
                return update(vtbl0,vtbl1,vtbl2); // try to rearrange cache
                       ^
type_switch3.cpp:100:5: note: in instantiation of member function 'mch::vtblmap<mch::type_switch_info>::get' requested here
    Match3(s0,s1,s2)
    ^
../../type_switch3.hpp:99:65: note: expanded from macro 'Match3'
        mch::type_switch_info& __switch_info = __vtbl2lines_map.get(subject_ptr0,subject_ptr1,subject_ptr2); \
                                                                ^
2 warnings generated.
--------------------------------------------------------------------------------
Linking type_switch3.exe ...
c++ -o type_switch3.exe -lstdc++ type_switch3.o -lstdc++
================================================================================
Done building type_switch3.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o type_switchN-decl.o type_switchN-decl.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name type_switchN-decl.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/type_switchN-decl.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o type_switchN-decl.o -x c++ type_switchN-decl.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from type_switchN-decl.cpp:47:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from type_switchN-decl.cpp:47:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN-decl.cpp:100:5: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    Match(s0)
    ^
../../type_switchN-decl.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-decl.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from type_switchN-decl.cpp:47:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN-decl.cpp:118:5: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    Match(s0,s1)
    ^
../../type_switchN-decl.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-decl.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from type_switchN-decl.cpp:47:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN-decl.cpp:142:5: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::get' requested here
    Match(s0,s1,s2)
    ^
../../type_switchN-decl.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-decl.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from type_switchN-decl.cpp:47:
In file included from ../../type_switchN-decl.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN-decl.cpp:187:5: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::get' requested here
    Match(s0,s1,s2,s3)
    ^
../../type_switchN-decl.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-decl.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
5 warnings generated.
--------------------------------------------------------------------------------
Linking type_switchN-decl.exe ...
c++ -o type_switchN-decl.exe -lstdc++ type_switchN-decl.o -lstdc++
================================================================================
Done building type_switchN-decl.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o type_switchN-patterns.o type_switchN-patterns.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name type_switchN-patterns.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/type_switchN-patterns.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o type_switchN-patterns.o -x c++ type_switchN-patterns.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from type_switchN-patterns.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from type_switchN-patterns.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:580:170: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    template <typename S1> inline auto get(const S1* s1) -> typename std::enable_if< std::is_polymorphic<S1>::value,T&>::type { intptr_t vtbl[1] = {vtbl_of(s1)}; return get(vtbl); }
                                                                                                                                                                         ^
type_switchN-patterns.cpp:105:5: note: in instantiation of function template specialization 'mch::vtbl_map<1, mch::type_switch_info<1> >::get<Shape>' requested here
    Match(s0)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from type_switchN-patterns.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:585:244: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    template <typename S1, typename S2> inline auto get(const S1* s1, const S2* s2) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value,T&>::type { intptr_t vtbl[2] = {vtbl_of(s1),vtbl_of(s2)}; return get(vtbl); }
                                                                                                                                                                                                                                                   ^
type_switchN-patterns.cpp:127:5: note: in instantiation of function template specialization 'mch::vtbl_map<2, mch::type_switch_info<2> >::get<Shape, Shape>' requested here
    Match(s0,s1)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from type_switchN-patterns.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:594:318: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::get' requested here
    template <typename S1, typename S2, typename S3> inline auto get(const S1* s1, const S2* s2, const S3* s3) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value &&  std::is_polymorphic<S3>::value,T&>::type { intptr_t vtbl[3] = {vtbl_of(s1),vtbl_of(s2),vtbl_of(s3)}; return get(vtbl); }
                                                                                                                                                                                                                                                                                                                             ^
type_switchN-patterns.cpp:155:5: note: in instantiation of function template specialization 'mch::vtbl_map<3, mch::type_switch_info<3> >::get<Shape, Shape, Shape>' requested here
    Match(s0,s1,s2)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
In file included from type_switchN-patterns.cpp:47:
In file included from ../../type_switchN-patterns.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
../../vtblmap4.hpp:611:392: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::get' requested here
    template <typename S1, typename S2, typename S3, typename S4> inline auto get(const S1* s1, const S2* s2, const S3* s3, const S4* s4) -> typename std::enable_if< std::is_polymorphic<S1>::value &&  std::is_polymorphic<S2>::value &&  std::is_polymorphic<S3>::value &&  std::is_polymorphic<S4>::value,T&>::type { intptr_t vtbl[4] = {vtbl_of(s1),vtbl_of(s2),vtbl_of(s3),vtbl_of(s4)}; return get(vtbl); }
                                                                                                                                                                                                                                                                                                                                                                                                       ^
type_switchN-patterns.cpp:204:5: note: in instantiation of function template specialization 'mch::vtbl_map<4, mch::type_switch_info<4> >::get<Shape, Shape, Shape, Shape>' requested here
    Match(s0,s1,s2,s3)
    ^
../../type_switchN-patterns.hpp:205:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN-patterns.hpp:194:96: note: expanded from macro 'MatchN'
        mch::type_switch_info<number_of_polymorphic_subjects>& __switch_info = __vtbl2case_map.get(XTL_ENUM(N,XTL_PREFIX,subject_ptr)); \
                                                                                               ^
5 warnings generated.
--------------------------------------------------------------------------------
Linking type_switchN-patterns.exe ...
c++ -o type_switchN-patterns.exe -lstdc++ type_switchN-patterns.o -lstdc++
================================================================================
Done building type_switchN-patterns.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o type_switchN.o type_switchN.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name type_switchN.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/type_switchN.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o type_switchN.o -x c++ type_switchN.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from type_switchN.cpp:47:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
In file included from type_switchN.cpp:47:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN.cpp:100:5: note: in instantiation of member function 'mch::vtbl_map<1, mch::type_switch_info<1> >::get' requested here
    Match(s0)
    ^
../../type_switchN.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from type_switchN.cpp:47:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN.cpp:118:5: note: in instantiation of member function 'mch::vtbl_map<2, mch::type_switch_info<2> >::get' requested here
    Match(s0,s1)
    ^
../../type_switchN.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from type_switchN.cpp:47:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN.cpp:142:5: note: in instantiation of member function 'mch::vtbl_map<3, mch::type_switch_info<3> >::get' requested here
    Match(s0,s1,s2)
    ^
../../type_switchN.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
In file included from type_switchN.cpp:47:
In file included from ../../type_switchN.hpp:52:
../../vtblmap4.hpp:968:5: warning: variable length arrays are a C99 feature [-Wvla-extension]
    XTL_VLAZ(cache_histogram, intptr_t, cache_histogram_size, 1 + max_stack_mask/XTL_BIT_SIZE(intptr_t)); // Declares intptr_t cache_histogram[cache_histogram_size] = {0};
    ^
../../config.hpp:513:34: note: expanded from macro 'XTL_VLAZ'
    #define XTL_VLAZ(v,T,n,N) T v[n]; std::memset(v,0,n*sizeof(T))
                                 ^
../../vtblmap4.hpp:1118:44: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::cache_descriptor::entries_for' requested here
    size_t max_cache_entries = descriptor->entries_for(vtbl, l1, descriptor->optimal_shift);
                                           ^
../../vtblmap4.hpp:530:24: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::update' requested here
                return update(vtbl);                      // try to rearrange cache
                       ^
type_switchN.cpp:187:5: note: in instantiation of member function 'mch::vtbl_map<4, mch::type_switch_info<4> >::get' requested here
    Match(s0,s1,s2,s3)
    ^
../../type_switchN.hpp:137:24: note: expanded from macro 'Match'
    #define Match(...) MatchN(XTL_NARG(__VA_ARGS__),__VA_ARGS__)
                       ^
../../type_switchN.hpp:126:67: note: expanded from macro 'MatchN'
        mch::type_switch_info<N>& __switch_info = __vtbl2case_map.get(__vtbl); \
                                                                  ^
5 warnings generated.
--------------------------------------------------------------------------------
Linking type_switchN.exe ...
c++ -o type_switchN.exe -lstdc++ type_switchN.o -lstdc++
================================================================================
Done building type_switchN.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o virpat-shapes.o virpat-shapes.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name virpat-shapes.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/virpat-shapes.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o virpat-shapes.o -x c++ virpat-shapes.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
In file included from virpat-shapes.cpp:62:
./../time/virpat.hpp:59:14: warning: reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true [-Wundefined-bool-conversion]
        if (&obj)
        ~~   ^~~
1 warning generated.
--------------------------------------------------------------------------------
Linking virpat-shapes.exe ...
c++ -o virpat-shapes.exe -lstdc++ virpat-shapes.o -lstdc++
================================================================================
Done building virpat-shapes.exe
================================================================================


c++ -I../../ -g -Wall -Wextra -pedantic -v -O2 -DNDEBUG -DXTL_MESSAGE_ENABLED=0 -std=c++11   -c -o xtl.o xtl.cpp
Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.10.0 -emit-obj -disable-free -disable-llvm-verifier -main-file-name xtl.cpp -mrelocation-model pic -pic-level 2 -mdisable-fp-elim -masm-verbose -munwind-tables -target-cpu core2 -target-linker-version 242 -v -gdwarf-2 -dwarf-column-info -coverage-file /Users/solodon/Projects/SELL/Mach7/code/test/unit/xtl.o -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -D NDEBUG -D XTL_MESSAGE_ENABLED=0 -I ../../ -stdlib=libc++ -O2 -Wall -Wextra -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /Users/solodon/Projects/SELL/Mach7/code/test/unit -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -mstackrealign -fblocks -fobjc-runtime=macosx-10.10.0 -fencode-extended-block-signature -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -vectorize-loops -vectorize-slp -o xtl.o -x c++ xtl.cpp
clang -cc1 version 6.1.0 based upon LLVM 3.6.0svn default target x86_64-apple-darwin14.3.0
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/c++/v1"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/local/include"
ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/Library/Frameworks"
#include "..." search starts here:
#include <...> search starts here:
 ../..
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.1.0/include
 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include
 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks (framework directory)
End of search list.
xtl.cpp:47:10: fatal error: 'boost/variant.hpp' file not found
#include "boost/variant.hpp"
         ^
1 error generated.
make[1]: *** [xtl.o] Error 1
rm type_switch2.o virpat-shapes.o prolog-pat.o cppcon-matching.o type_switchN-patterns.o shape7.o expr_meta.o algebraic.o expr.o shape4.o type_switchN-decl.o example01.o cppcon-visitors.o morton.o example02.o prolog.o type_switch3.o exp.o one_of.o guards.o category.o shape5.o pattern_composition.o example03.o non_unique_workaround.o type_switchN.o extractor.o prolog-pat2.o shape.o example05.o regex.o non_unique_problem.o filter.o predicate.o memoized_cast.o shape8.o exp2.o example04.o shape6.o
make: *** [unit] Error 2
rm pargen.o
